name: CICD   

on: push

jobs: 
  deployment:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # - name: Install dependencies
      #   run: |
      #     pip install -r requirements-dev.txt

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
      - name: Install dvc and dvc[s3]
        run: 
          pip install dvc dvc[s3]
      - name: dvc pull
        run: |
          dvc pull
          
      # - name: Run pipeline
      #   env:
      #     DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_DEFAULT_REGION: ap-south-1
      #   run: |
      #     dvc pull
      #     dvc repro
      
      # - name: Test Model Registry
      #   env:
      #     DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
      #   run: |
      #     pytest tests/test_model_registry.py

      # - name: Test Model Performance
      #   env: 
      #     DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
      #   run: |
      #     pytest tests/test_model_perf.py

      # - name: Promote Model
      #   if: success()
      #   env:
      #     DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
      #   run: |
      #     python scripts/promote_model_to_prod.py


      - name: Log in to Docker HUB
        if: success()
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker Image
        if: success()
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/delivery-time-prediction-api:latest .
      
      - name: Push Docker image to DOCKER HUB
        if: success()
        run: |
          docker push ${{secrets.DOCKER_HUB_USERNAME }}/delivery-time-prediction-api:latest
        
      
      